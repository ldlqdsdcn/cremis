<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cityre.mis.city.merchant.dao.CouserInfoDao">


    <sql id="Query_Where_Clause">
        <where>
            userlist.uid is not null  and del_flag>=0
            <if test="couseruid != null and couseruid != ''">
                and userlist.uid like #{couseruid}
            </if>
            <if test="username != null and username != ''">
                and (userlist.Name like #{username} or userlist.nickname like #{username}
            </if>
            <if test="phone != null and phone != ''">
                and user_tel.telNo like #{phone}
            </if>
            <if test="email != null and email != ''">
                and user_email.email like  #{email}
            </if>

            <if test="flag != null">
               <if test="flag == 0">
                   and (userlist.userlist_flag is null or userlist.userlist_flag = 0 )
               </if>
                <if test="flag == 1">
                    and userlist.userlist_flag = 1 and userlist.userlist_flag_again is null
                </if>
                <if test="flag == -1">
                    and userlist.userlist_flag = -1 and userlist.userlist_flag_again is null
                </if>
            </if>
            <if test="coname != null and coname != ''">
                and co.coname like #{coname}
            </if>

            <if test="certp != null">
                <if test="certp == 1">
                    and co_user.certification= 1
                </if>
                <if test="certp == 2">
                    and (co_user.certification =1 or co_user.certification=-1)
                </if>
                <if test="certp == -1">
                    and co_user.certification= -1
                </if>
                <if test="certp == 0">
                    and co_user.certification='0' and co_user.certPhoto is not null and trim(co_user.certPhoto) != ''
                </if>
            </if>

            <if test="permission != null">
               <if test="permission == 1">
                   and ad.uid is not null
               </if>
                <if test="permission == 0">
                    and ad.uid is null
                </if>
            </if>
            <if test="regtimeStartDate != null and regtimeStartDate != ''">
                <![CDATA[    and co_user.applytime >= #{regtimeStartDate} ]]>

            </if>
            <if test="regtimeEndDate != null and regtimeEndDate != '' ">
                <![CDATA[   and co_user.applytime <= #{regtimeEndDate} ]]>
            </if>

            <if test="certtimeStartDate != null and certtimeStartDate != ''">
                <![CDATA[    and userlist.userlist_flag_time >= #{certtimeStartDate} ]]>

            </if>
            <if test="regtimeEndDate != null and regtimeEndDate != '' ">
                <![CDATA[   and userlist.userlist_flag_time <= #{certtimeEndDate} ]]>
            </if>

            <if test="logintimeStartDate != null and logintimeStartDate != ''">
                <![CDATA[  and us.logintm >= #{logintimeStartDate} ]]>

            </if>
            <if test="logintimeEndDate != null and logintimeEndDate != '' ">
                <![CDATA[   and us.logintm <= #{logintimeEndDate} ]]>
            </if>

            <if test="usertype != null ">
                <if test="usertype == 2">
                    and  co_user.uid=co_user.cocode
                </if>
                <if test="usertype == 3">
                    and  co_user.uid != co_user.cocode  and (co_user.isadmin != 1 or co_user.isadmin is null )
                </if>
                <if test="usertype == 4">
                    and  co_user.uid != co_user.cocode and co_user.isadmin = 1
                </if>
            </if>

        </where>
    </sql>

    <select id="selectCouserInfoList" parameterType="java.util.Map" resultType="cn.cityre.mis.city.merchant.entity.po.CouserInfo" >
        select co_user.user_type,co.costate,co_user.tel_cert_state,user_recom_relation.uid as tuijian_uid,co_user.tel_cert_times,
        co_user.tel_cert_updatetime,co_user.usercert_updatetime,userlist.id,userlist.sex,userlist.headportrait_flag,co_user.userconame,
        co_user.usercoaddr,co_user.certPhoto,userlist.headportrait,co.coname,co_user.cocode,co_user.certification,userlist.uid,userlist.IDNo,
        co.coaddr,co.costate,co_user.isadmin,userlist_flag,userlist_flag_uid,userlist_flag_time,userlist.updatetime,userlist.Name as name,
        userlist.nickName,co_user.applytime,co_user.setuid,userlist.userlist_remark
        <if test="(logintimeStartDate != null and logintimeStartDate != '') or (logintimeEndDate != null and logintimeEndDate != '') or (order != null and order == 1)">
        , us.logintm
        </if>

        from userlist inner join co_user on userlist.uid=co_user.uid

        <if test="(logintimeStartDate != null and logintimeStartDate != '') or (logintimeEndDate != null and logintimeEndDate != '') or (order != null and order == 1)">
        left join (select us.uid,max(us.logintm) as logintm from user_signin us group by us.uid) us on us.uid = userlist.uid
        </if>
        left join co on co.cocode = co_user.cocode
        left join user_tel on userlist.uid = user_tel.uid and user_tel.validsetuid is null
        left join user_email on userlist.uid = user_email.uid and user_email.validsetuid is null
        left join user_recom_relation on user_recom_relation.recommended_uid=co_user.uid
        left join (select distinct uid from ad where end_time>now()) ad on ad.uid = userlist.uid
        <include refid="Query_Where_Clause" />
        group by userlist.uid
        <if test="turn != null">
            <if test="turn == true">
                <if test="order != null">
                    <if test="order == 0" >
                        order by applytime
                    </if>
                    <if test="order == 1" >
                        order by us.logintm
                    </if>
                    <if test="order == 2" >
                        order by  co_user.tel_cert_updatetime
                    </if>
                </if>
            </if>
            <if test="turn == false">
                <if test="order != null">
                    <if test="order == 0" >
                        order by applytime desc
                    </if>
                    <if test="order == 1" >
                        order by us.logintm desc
                    </if>
                    <if test="order == 2" >
                        order by  co_user.tel_cert_updatetime desc
                    </if>
                </if>
            </if>
        </if>
        limit #{limitStart} ,  #{limitEnd}
    </select>

    <select id="selectCouserInfoCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
        select count(t.id)  from (
        select userlist.id
        from userlist inner join co_user on userlist.uid=co_user.uid
        <if test="(logintimeStartDate != null and logintimeStartDate != '') or (logintimeEndDate != null and logintimeEndDate != '') or (order != null and order == 1)">
        left join (select us.uid,max(us.logintm) as logintm from user_signin us group by us.uid) us on us.uid = userlist.uid
        </if>
        left join co on co.cocode = co_user.cocode
        left join user_tel on userlist.uid = user_tel.uid and user_tel.validsetuid is null
        left join user_email on userlist.uid = user_email.uid and user_email.validsetuid is null
        left join user_recom_relation on user_recom_relation.recommended_uid=co_user.uid
        left join (select distinct uid from ad where end_time>now()) ad on ad.uid = userlist.uid
        <include refid="Query_Where_Clause" />
        group by userlist.uid )t
    </select>
    <select id="selectTelByUid" parameterType="java.lang.String" resultType="java.lang.String" >
       select telNo from user_tel where UID = #{uid} and  validsetuid is null
    </select>
    <select id="selectEmailByUid" parameterType="java.lang.String" resultType="java.lang.String" >
        select email from user_email where UID =#{uid}
    </select>
    <select id="selectAdCountByUid" parameterType="java.lang.String" resultType="java.lang.Integer" >
        select count(id) from ad where ad.uid = #{uid} and  end_time > now()
    </select>

    <select id="selectPerdaycount" parameterType="java.util.Map" resultType="cn.cityre.mis.city.merchant.entity.po.Perdaycount" >
       select ym,sum(qnt) as qnt from (
       select date_format(modifiedtime,'%Y-%m-%d') as ym,count(*) as qnt from qd_forsale
       left join ha on qd_forsale.hacode=ha.ha_code and ha.confirmid=2
       left join street on qd_forsale.streetcode=street.street_code and street.confirmid=2
       where ((qd_forsale.hacode is not null and ha.confirmid=2)
       or (qd_forsale.hacode is null and street.confirmid=2))
       and manageuid=#{uid} and (validDate is null or validDate>=now())
       and (tel is not null or email is not null) and
       ((qd_forsale.showorder=1 and qd_forsale.sourceurl is not null )
        or (qd_forsale.sourceurl is null) ) and modifiedtime>=#{nowDate}
        group by date_format(modifiedtime,'%Y-%m-%d')
        union all
        select date_format(modifiedtime,'%Y-%m-%d') as ym,count(*) as qnt
        from qd_lease qd_forsale
        left join ha on qd_forsale.hacode=ha.ha_code and ha.confirmid=2
        left join street on qd_forsale.streetcode=street.street_code and street.confirmid=2
        where ((qd_forsale.hacode is not null and ha.confirmid=2)
        or (qd_forsale.hacode is null and street.confirmid=2))
        and manageuid=#{uid} and (validDate is null or validDate>=now())
        and (tel is not null or email is not null) and
        ((qd_forsale.showorder=1 and qd_forsale.sourceurl is not null )
        or (qd_forsale.sourceurl is null) )  and modifiedtime>=#{nowDate}
        group by date_format(modifiedtime,'%Y-%m-%d') )a  group by ym order by ym
    </select>
    <update id="updateUserlist_remark_uid" parameterType="java.util.Map">
       update userlist set userlist_flag = '-1',userlist_remark=#{reason},userlist_flag_uid=#{sysuid},userlist_flag_time=now(),userlist_flag_again = null where uid= #{uid}
    </update>



    <select id="selectDealcodeFromQd_forsale" parameterType="java.lang.String" resultType="java.lang.String" >
        select distinct dealcode from qd_forsale where manageuid=#{couid} and (validDate is null or validDate>now())
    </select>

    <update id="updateQd_forsale_validDate" parameterType="java.lang.String">
       update qd_forsale set validDate = now() where manageUID =#{uid} and (validDate is null or validDate>now())
    </update>

    <select id="selectDealcodeFromQd_lease" parameterType="java.lang.String" resultType="java.lang.String" >
        select distinct dealcode from qd_lease where manageuid=#{couid} and (validDate is null or validDate>now())
    </select>

    <update id="updateQd_lease_validDate" parameterType="java.lang.String">
         update qd_lease set validDate = now() where manageUID =#{uid} and (validDate is null or validDate>now())
    </update>
    <update id="updateCoByCocode" parameterType="java.util.Map">
        update co set costate=0,VerifyUID=#{sysuid},VerifyTime=now() where cocode=#{cocode}
    </update>

    <select id="selectCount_qd_forsale" parameterType="java.lang.String" resultType="java.lang.Integer" >
       select count(*) as cnt from qd_forsale where qd_forsale.manageUID=#{uid} and (validdate > now() or validdate is null)
    </select>

    <select id="selectCount_qd_lease" parameterType="java.lang.String" resultType="java.lang.Integer" >
        select count(*) as cnt from qd_lease where qd_forsale.manageUID=#{uid} and (validdate > now() or validdate is null)
    </select>
    
    <delete id="deleteFromCouser" parameterType="java.lang.String">
        delete from co_user where co_user.cocode = co_user.uid and co_user.uid = #{uid};
    </delete>

    <update id="updateQd_forsale_source" parameterType="java.lang.String">
         update qd_forsale set source=null where  qd_forsale.manageUID=#{uid}
    </update>

    <update id="updateQd_lease_source" parameterType="java.lang.String">
       update qd_lease set source=null where  qd_lease.manageUID=#{uid}
    </update>

    <update id="updateUserlistChange" parameterType="java.lang.String">
       update userlist set userlist_flag=null,userlist_remark=null,userlist_flag_uid=null,userlist_flag_time=null,userlist_flag_again=null where uid=#{uid}
    </update>
</mapper>
