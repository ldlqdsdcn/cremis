<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cityre.mis.city.merchant.dao.UserListDao">


    <sql id="Query_Where_Clause">
        <where>
            1=1
            <if test="uid != null and uid !=''"> and u.UID like #{uid}</if>
            <if test="phone != null and phone != ''"> and t.telNo like #{phone}</if>
            <if test="email != null and email != ''"> and e.email like #{email}</if>
            <if test="company != null and company != '' "> and co.coname like #{company}</if>
        </where>
    </sql>

    <select id="selectUserlist" parameterType="java.util.Map" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
        SELECT u.ID id,u.UID uid,co.CoName companyName,cu.CoCode coCode,co.CoUID coUID   FROM  userlist u
        left join co_user cu on cu.UID=u.UID
        left join co co on co.CoCode = cu.CoCode
        left join user_tel t on u.UID = t.UID
        left join user_email e on e.UID = u.UID
        <include refid="Query_Where_Clause" />
        limit #{limitStart} ,  #{limitEnd}
    </select>

    <select id="selectUserlistCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
        SELECT  count(u.id) FROM  userlist u
        left join co_user cu on cu.UID=u.UID
        left join co co on co.CoCode = cu.CoCode
        left join user_tel t on u.UID = t.UID
        left join user_email e on e.UID = u.UID
        <include refid="Query_Where_Clause" />
    </select>

    <select id="selectServiceingHa" parameterType="java.util.Map" resultType="cn.cityre.mis.city.merchant.entity.po.ServiceHa" >
        select ad.ha_ad_type haType,ha_kindred.name haName ,ad.begin_time startDate  ,ad.end_time endDate  from
        (select distinct uid,code,begin_time,end_time,ha_ad_type from ad where ad_class_code=3
            <![CDATA[   and end_time >= now() ]]>
         ) ad
        inner join ha_kindred on ad.code=ha_kindred.ha_code and ha_kindred.kindred_cl_code='rn' where uid=#{uid} or uid=#{cocode}  order by ad.code,ad.ha_ad_type desc
    </select>

    <select id="selectOutDateHa" parameterType="java.util.Map" resultType="cn.cityre.mis.city.merchant.entity.po.ServiceHa" >
        select ad.ha_ad_type haType,ha_kindred.name haName ,ad.begin_time startDate  ,ad.end_time endDate  from
        (select distinct uid,code,begin_time,end_time,ha_ad_type from ad where ad_class_code=3
          <![CDATA[   and end_time < now() ]]>
        ) ad
        inner join ha_kindred on ad.code=ha_kindred.ha_code and ha_kindred.kindred_cl_code='rn' where uid=#{uid} or uid=#{cocode}  order by ad.code,ad.ha_ad_type desc
    </select>

    <select id="selectCoInfo" parameterType="java.lang.String" resultType="cn.cityre.mis.city.merchant.entity.po.CoInfo" >
       select co.*,co_cl.coinfo from co left join co_cl on co_cl.cocl=co.cocl where cocode= #{cocode}
    </select>

    <select id="selectUserinfo" parameterType="java.lang.String" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
        select userlist.*,user_tel.telno as telno,user_email.email,co_user.setuid
        from co_user inner join userlist on co_user.uid=userlist.uid
        left join user_tel on user_tel.uid=userlist.uid
        left join user_email on user_email.uid=userlist.uid where co_user.cocode= #{cocode}
    </select>

    <select id="selectUserinfoCount" parameterType="java.lang.String" resultType="java.lang.Integer" >
        select count(co_user.ID)
        from co_user inner join userlist on co_user.uid=userlist.uid
        left join user_tel on user_tel.uid=userlist.uid
        left join user_email on user_email.uid=userlist.uid where co_user.cocode= #{cocode}
    </select>
    <select id="selectUserInfo" parameterType="java.lang.String" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
       select userlist.*,user_tel.telNo as telno,user_email.email,
       (select cocode from co_user where uid=userlist.uid limit 1) as cocode
       from userlist left join user_tel on user_tel.uid=userlist.uid
       left join user_email on user_email.uid=userlist.uid where userlist.uid=#{uid} limit 1
    </select>

    <select id="selectRegtimeFromCenterDb" parameterType="java.lang.String" resultType="java.util.Date" >
        select regtime FROM  userlist where uid = #{uid}
    </select>
    <select id="selectUserlistByUid" parameterType="java.lang.String" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
        select * FROM  userlist where UID = #{uid}
    </select>
    <update id="updateUserlist_flag_uid" parameterType="java.util.Map">
        update userlist set userlist_flag = 1,userlist_flag_uid=#{uid},userlist_flag_time=now(),userlist_flag_again = null where uid=#{userlistuid}
    </update>

    <select id="selectUserlistById" parameterType="java.lang.Integer" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
        select * FROM  userlist where id = #{id}
    </select>

    <select id="selectPermissionByUid" parameterType="java.lang.String" resultType="cn.cityre.mis.city.merchant.entity.po.UserList" >
        select permission from userlist where uid = #{uid}
    </select>

    <update id="updatePermissionByUid" parameterType="java.util.Map">
      update userlist set permission = #{permission} where uid = #{uid}
    </update>
    
    <select id="selectUserHouseSourceCnt" parameterType="java.lang.String" resultType="java.lang.Integer">
        select sum(qdid) as qdid from
            (select manageuid,count(qd_forsale.id) as qdid
            from qd_forsale
            inner join qd_prop on qd_forsale.propcode=qd_prop.propcode
            left join ha on qd_prop.ha=ha.ha_code and ha.confirmid=2
            left join street on qd_prop.streetcode=street.street_code and street.confirmid=2
            where ((qd_prop.ha is not null and ha.confirmid=2) or (qd_prop.ha is null and street.confirmid=2))
            and (validDate is null or validDate>=now()) and (tel is not null or email is not null) and ((qd_forsale.showorder=1 and
            qd_forsale.sourceurl is not null ) or (qd_forsale.sourceurl is null) )
		    and manageUID = #{uid}
            union all
            select manageUID,count(qd_forsale.id) as qdid
            from qd_lease qd_forsale
            inner join qd_prop on qd_forsale.propcode=qd_prop.propcode
            left join ha on qd_prop.ha=ha.ha_code and ha.confirmid=2
            left join street on qd_prop.streetcode=street.street_code and street.confirmid=2
            where ((qd_prop.ha is not null and ha.confirmid=2) or (qd_prop.ha is null and street.confirmid=2))
            and (validDate is null or validDate>=now()) and (tel is not null or email is not null) and ((qd_forsale.showorder=1 and
            qd_forsale.sourceurl is not null ) or (qd_forsale.sourceurl is null) )
		and manageUID = #{uid}
            )b  group by manageuid
    </select>
    <select id="selectCoHouseSourceCnt" parameterType="java.lang.String" resultType="java.lang.Integer">
        select sum(qdid) as qdid from
              (select source,count(qd_forsale.id) as qdid
              from qd_forsale
              inner join qd_prop on qd_forsale.propcode=qd_prop.propcode
              left join ha on qd_prop.ha=ha.ha_code and ha.confirmid=2
              left join street on qd_prop.streetcode=street.street_code and street.confirmid=2
              where ((qd_prop.ha is not null and ha.confirmid=2) or (qd_prop.ha is null and street.confirmid=2))
              and (validDate is null or validDate>=now()) and (tel is not null or email is not null) and ((qd_forsale.showorder=1 and
              qd_forsale.sourceurl is not null ) or (qd_forsale.sourceurl is null) )
              and source = #{cocode}

              union all

              select source,count(qd_forsale.id) as qdid
              from qd_lease qd_forsale
              inner join qd_prop on qd_forsale.propcode=qd_prop.propcode
              left join ha on qd_prop.ha=ha.ha_code and ha.confirmid=2
              left join street on qd_prop.streetcode=street.street_code and street.confirmid=2
              where ((qd_prop.ha is not null and ha.confirmid=2) or (qd_prop.ha is null and street.confirmid=2))
              and (validDate is null or validDate>=now()) and (tel is not null or email is not null) and ((qd_forsale.showorder=1 and
              qd_forsale.sourceurl is not null ) or (qd_forsale.sourceurl is null) )
              and source =#{cocode}
              )b group by source
    </select>

</mapper>
