<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cityre.mis.account.dao.AccountUserMapper">
  <resultMap id="BaseResultMap" type="cn.cityre.mis.account.model.AccountUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="unionUid" jdbcType="VARCHAR" property="unionuid" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="realName" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="userIcon" jdbcType="VARCHAR" property="usericon" />
    <result column="passwordSalt" jdbcType="VARCHAR" property="passwordsalt" />
    <result column="passwordHash" jdbcType="VARCHAR" property="passwordhash" />
    <result column="oldPasswordHash" jdbcType="VARCHAR" property="oldpasswordhash" />
    <result column="isVerified" jdbcType="TINYINT" property="isverified" />
    <result column="isValid" jdbcType="TINYINT" property="isvalid" />
    <result column="accountSecret" jdbcType="VARCHAR" property="accountsecret" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, unionUid, userId, nickName, realName, sex, birthday, userIcon, passwordSalt, 
    passwordHash, oldPasswordHash, isVerified, isValid, accountSecret, createTime, updateTime
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <if test="userId!=null"> and userId=#{userId,jdbcType=VARCHAR}</if>
      <if test="useridLike!=null"> and userId  like  CONCAT('%',#{useridLike,jdbcType=VARCHAR},'%' )</if>
      <if test="nicknameLike!=null"> and nickName  like CONCAT('%',#{nicknameLike,jdbcType=VARCHAR},'%' )</if>
    </where>
  </sql>
  <select id="selectByUnionUid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />

    from v2017_user where unionUid=#{value}
  </select>
  <select id="selectList" parameterType="cn.cityre.mis.account.entity.query.AccountUserQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />

    from v2017_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from v2017_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from v2017_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cityre.mis.account.model.AccountUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into v2017_user (unionUid, userId, nickName, 
      realName, sex, birthday, 
      userIcon, passwordSalt, passwordHash, 
      oldPasswordHash, isVerified, isValid, 
      accountSecret, createTime, updateTime
      )
    values (#{unionuid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{usericon,jdbcType=VARCHAR}, #{passwordsalt,jdbcType=VARCHAR}, #{passwordhash,jdbcType=VARCHAR}, 
      #{oldpasswordhash,jdbcType=VARCHAR}, #{isverified,jdbcType=TINYINT}, #{isvalid,jdbcType=TINYINT}, 
      #{accountsecret,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cityre.mis.account.model.AccountUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into v2017_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unionuid != null">
        unionUid,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="realname != null">
        realName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="usericon != null">
        userIcon,
      </if>
      <if test="passwordsalt != null">
        passwordSalt,
      </if>
      <if test="passwordhash != null">
        passwordHash,
      </if>
      <if test="oldpasswordhash != null">
        oldPasswordHash,
      </if>
      <if test="isverified != null">
        isVerified,
      </if>
      <if test="isvalid != null">
        isValid,
      </if>
      <if test="accountsecret != null">
        accountSecret,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unionuid != null">
        #{unionuid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="usericon != null">
        #{usericon,jdbcType=VARCHAR},
      </if>
      <if test="passwordsalt != null">
        #{passwordsalt,jdbcType=VARCHAR},
      </if>
      <if test="passwordhash != null">
        #{passwordhash,jdbcType=VARCHAR},
      </if>
      <if test="oldpasswordhash != null">
        #{oldpasswordhash,jdbcType=VARCHAR},
      </if>
      <if test="isverified != null">
        #{isverified,jdbcType=TINYINT},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=TINYINT},
      </if>
      <if test="accountsecret != null">
        #{accountsecret,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cityre.mis.account.model.AccountUser">
    update v2017_user
    <set>
      <if test="unionuid != null">
        unionUid = #{unionuid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="usericon != null">
        userIcon = #{usericon,jdbcType=VARCHAR},
      </if>
      <if test="passwordsalt != null">
        passwordSalt = #{passwordsalt,jdbcType=VARCHAR},
      </if>
      <if test="passwordhash != null">
        passwordHash = #{passwordhash,jdbcType=VARCHAR},
      </if>
      <if test="oldpasswordhash != null">
        oldPasswordHash = #{oldpasswordhash,jdbcType=VARCHAR},
      </if>
      <if test="isverified != null">
        isVerified = #{isverified,jdbcType=TINYINT},
      </if>
      <if test="isvalid != null">
        isValid = #{isvalid,jdbcType=TINYINT},
      </if>
      <if test="accountsecret != null">
        accountSecret = #{accountsecret,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cityre.mis.account.model.AccountUser">
    update v2017_user
    set unionUid = #{unionuid,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      userIcon = #{usericon,jdbcType=VARCHAR},
      passwordSalt = #{passwordsalt,jdbcType=VARCHAR},
      passwordHash = #{passwordhash,jdbcType=VARCHAR},
      oldPasswordHash = #{oldpasswordhash,jdbcType=VARCHAR},
      isVerified = #{isverified,jdbcType=TINYINT},
      isValid = #{isvalid,jdbcType=TINYINT},
      accountSecret = #{accountsecret,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>